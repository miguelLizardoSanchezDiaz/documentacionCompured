openapi: 3.0.3
info:
  title: Documentación ERP Endpoints COMPUREDSAC
  description: >-
    Esta documentación swagger sirve como guía referencial del detalle de los
    endpoints a consumir.
  termsOfService: https://compuredstore.com/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: https://compuredstore.com/
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: https://compuredstore.com/
servers:
  - url: https://compuredstore.com/
tags:
  - name: Products
    description: Productos o artículos de compuredsac
    externalDocs:
      description: Find out more
      url: https://compuredstore.com/
paths:
  /product:
    get:
      tags:
        - product
      summary: Lista catálogo de articulos debidamente paginado
      description: >-
        Lista de articulos para ser mostrados en el catálogo de articulos de la
        web
      operationId: getProducts
      parameters:
        - name: filter_cat
          in: query
          description: filtro de categoría
          required: false
          schema:
            type: string
        - name: filter_marca
          in: query
          description: filtro de marca
          required: false
          explode: true
          schema:
            type: string
        - name: filter_precio
          in: query
          description: filtro por precio
          required: false
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /product/{id}:
    put:
      tags:
        - product
      summary: Actualiza un producto existente
      description: Actualiza un producto existente por Id
      operationId: updatedProduct
      parameters:
        - name: id
          in: path
          description: Identificador del producto a actualizar
          required: true
          schema:
            type: string
      requestBody:
        description: Actualiza un producto existente en odoo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/xml:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /product/{description}:
    get:
      tags:
        - product
      summary: Muestra detalle de artículo
      description: Muestra detalle de artículo según descripción
      operationId: getProduct
      parameters:
        - name: description
          in: path
          description: Identificador del producto a actualizar
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:products
            - read:products
  /category:
    get:
      tags:
        - category
      summary: Muestra Listado de categorias
      description: Retorna Listado de categorias
      operationId: getCategories
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category'
            application/xml:
              schema:
                $ref: '#/components/schemas/category'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
        - petstore_auth:
            - write:pets
            - read:pe
  /marca:
    get:
      tags:
        - marca
      summary: Muestra Listado de marcas debidamente paginado
      description: Retorna Listado de marcas debidamente paginado
      operationId: getMarcas
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marca'
            application/xml:
              schema:
                $ref: '#/components/schemas/marca'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
        - petstore_auth:
            - write:pets
            - read:pe
  /subcategory/{category}:
    get:
      tags:
        - category
      summary: Muestra Listado de subcategorías según categoria
      description: Retorna Listado de subcategorías según categoria
      operationId: getSubcategories
      parameters:
        - name: category
          in: path
          description: categoria
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subCategory'
            application/xml:
              schema:
                $ref: '#/components/schemas/subCategory'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
        - petstore_auth:
            - write:pets
            - read:pets
  /stock/{productId}:
    get:
      tags:
        - stock
      summary: Muestra stock según producto
      description: Muestra stock actual según Id de producto
      operationId: findStock
      parameters:
        - name: productId
          in: path
          description: Id del producto a consultar
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/stock'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/stock'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /checkout:
    post:
      tags:
        - checkout
      summary: Guarda detalles de venta
      description: ''
      operationId: postCheckout
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/checkout'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/checkout'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /search/{query}:
    get:
      tags:
        - search
      summary: Muestra los productos a buscar
      description: Muestra listado de productos según query
      operationId: findProduct
      parameters:
        - name: query
          in: path
          description: query a consultar
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
components:
  schemas:
    Product:
      required:
        - description
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        sku:
          type: string
          example: KM45VGRT
        descripcion:
          type: string
          example: Laptop HP 250 Core I3-1005, 15.6 pulgadas, 4GB RAM, 1TB
        modelo:
          type: string
          example: U7Z-00038
        marca:
          type: string
          example: LOGITECH
        color:
          type: string
          example: ROJO
        procesador:
          type: string
          example: Core I5
        ram:
          type: string
          example: 18 GB
        almacenamiento:
          type: string
          example: GTX 1650
        resolucion:
          type: string
          example: 4K
        pantalla:
          type: integer
          format: int64
          example: 20
        graficos:
          type: string
          example: GTX 1650
        precioVentaLista:
          type: number
          example: 1000
        precioVenta:
          type: number
          example: 700
        descuento:
          type: number
          example: 30
        stock:
          type: number
          example: 3
        images:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/imgURL'
        categoriaId:
          type: integer
          format: int64
          example: 12
        especificaciones:
          type: string
          example: otras especificaciones técnicas
      xml:
        name: product
    imgURL:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 12
        descripcion:
          type: string
          example: Nombre de la imagen
        url:
          type: string
          example: >-
            https://compuredstore.com/wp-content/uploads/2021/09/Mouse-Inalambrico-180-Microsoft-1.webp
      xml:
        name: imgURL
    category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        descripcion:
          type: string
          example: Laptops
      xml:
        name: category
    subCategory:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        descripcion:
          type: string
          example: Laptops Gamer
      xml:
        name: category
    marca:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        marca:
          type: string
          example: HP
      xml:
        name: category
    stock:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        product:
          type: string
          example: Laptop gamer HP 250
        stock:
          type: integer
          example: 15
      xml:
        name: stock
    checkout:
      type: object
      properties:
        tipoDocumento:
          type: string
          example: dni
        nombres:
          type: string
          example: CARLOS
        apellidos:
          type: string
          example: TERRONES ALVA
        nombreEmpresa:
          type: string
          example: COMPURED SAC
        telefono:
          type: string
          example: 987789987
        ubigeo:
          type: string
          example: 130101
        detalleDireccion:
          type: string
          example: ref colegio narvaez
        direccion:
          type: string
          example: urb vista alegre 7346
        modalidadPago:
          type: string
          example: tarjeta
        recojoEntienda:
          type: boolean
          example: true
      xml:
        name: address
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: pet
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
